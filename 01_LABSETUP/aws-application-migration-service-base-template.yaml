Description: "Demo Application Migration Service (MGN), this template MUST be used in us-east-1"
Parameters:
  LatestAmiId:
    Description: AMI for any EC2 Instances (if applicable) (default is latest AmaLinux2)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
  OnpremVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: OnpremVPC
  OnpremIGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: IGW-ONPREM
  OnpremIGWAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref OnpremVPC
      InternetGatewayId: !Ref OnpremIGW
  OnpremSNPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref OnpremVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.0.0/25
      Tags:
        - Key: Name
          Value: OnpremSNPublic
  OnpremRTPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref OnpremVPC
      Tags:
        - Key: Name
          Value: ONPREM-RT-PUBLIC
  OnpremRTPublicAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref OnpremSNPublic
      RouteTableId:
        Ref: OnpremRTPublic
  OnpremRouteDefaultPublic:
    Type: 'AWS::EC2::Route'
    DependsOn: OnpremIGWAttachment
    Properties:
      RouteTableId:
        Ref: OnpremRTPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: OnpremIGW
  OnpremInstanceSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref OnpremVPC
      GroupDescription: OnpremVPC EC2 instances SG
      SecurityGroupIngress:
        - Description: 'Allow SSH IPv4 IN'
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - Description: 'Allow ALL from AWS Networks'
          IpProtocol: "-1"
          CidrIp: '10.0.1.0/24'
  OnpremServer:
    Type: AWS::EC2::Instance
    DependsOn: OnpremInstanceSG
    Properties:
      ImageId: !Ref 'LatestAmiId'
      InstanceType: 't2.micro'
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref 'OnpremInstanceSG'
          SubnetId: !Ref 'OnpremSNPublic'
      Tags:
        - Key: Name
          Value: 'OnpremServer'
  AWSVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.1.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: awsVPC
  AWSSNPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AWSVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.1.0/25
      Tags:
        - Key: Name
          Value: AWSSNPublic
  AWSIGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: IGW-AWS
  AWSIGWAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref AWSVPC
      InternetGatewayId: !Ref AWSIGW
  AWSRTPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref AWSVPC
      Tags:
      - Key: Name
        Value: AWS-RT-PUBLIC
  AWSRTPublicAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AWSSNPublic
      RouteTableId:
        Ref: AWSRTPublic
  AWSRouteDefaultPublic:
    Type: 'AWS::EC2::Route'
    DependsOn: AWSIGWAttachment
    Properties:
      RouteTableId:
        Ref: AWSRTPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: AWSIGW
  AWSVPCdefaultSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref AWSVPC
      GroupDescription: Default AWSVPC SG
      SecurityGroupIngress:
        - Description: 'Allow SSH IPv4 IN'
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - Description: 'Allow HTTP IPv4 IN'
          IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '10.0.1.0/24'
        - Description: 'Allow HTTPS IPv4 IN'
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: '10.0.1.0/24'
      SecurityGroupEgress:
        - Description: 'Allow all IPv4 Out'
          CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
  AWSInstanceSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref AWSVPC
      GroupDescription: AWSVPC EC2 instances SG
      SecurityGroupIngress:
        - Description: 'Allow SSH IPv4 IN'
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - Description: 'Allow ALL from AWS Networks'
          IpProtocol: "-1"
          CidrIp: '10.0.1.0/24'

